{"version":3,"sources":["main.js"],"names":["addNamed","promiseToSync","t","types","visitor","ReferencedIdentifier","path","node","parent","scope","name","isMemberExpression","getBindingIdentifier","replaceWith","nameHint","MemberExpression","obj","object","isReferenced","computed","memberExpression","property"],"mappings":"AAAA,SAASA,QAAT,QAAyB,8BAAzB;AAEA,eAAe,SAASC,aAAT,OAAqC;AAAA,MAALC,CAAK,QAAZC,KAAY;AAClD,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,oBAAoB,CAACC,IAAD,EAAO;AAAA,YACjBC,IADiB,GACOD,IADP,CACjBC,IADiB;AAAA,YACXC,MADW,GACOF,IADP,CACXE,MADW;AAAA,YACHC,KADG,GACOH,IADP,CACHG,KADG;AAGzB,YAAIF,IAAI,CAACG,IAAL,KAAc,SAAlB,EAA6B;AAC7B,YAAIR,CAAC,CAACS,kBAAF,CAAqBH,MAArB,CAAJ,EAAkC;AAClC,YAAIC,KAAK,CAACG,oBAAN,CAA2B,SAA3B,CAAJ,EAA2C;AAE3CN,QAAAA,IAAI,CAACO,WAAL,CACEb,QAAQ,CAACM,IAAD,EAAO,oBAAP,EAA6B,qBAA7B,EAAoD;AAC1DQ,UAAAA,QAAQ,EAAE;AADgD,SAApD,CADV;AAKD,OAbM;;AAePC,MAAAA,gBAAgB,CAACT,IAAD,EAAO;AAAA,YACbC,IADa,GACJD,IADI,CACbC,IADa;AAErB,YAAMS,GAAG,GAAGT,IAAI,CAACU,MAAjB;AAEA,YAAID,GAAG,CAACN,IAAJ,KAAa,SAAjB,EAA4B;AAC5B,YAAI,CAACJ,IAAI,CAACY,YAAL,EAAL,EAA0B;AAC1B,YAAIZ,IAAI,CAACG,KAAL,CAAWG,oBAAX,CAAgC,SAAhC,CAAJ,EAAgD;;AAEhD,YAAIL,IAAI,CAACY,QAAT,EAAmB;AACjBb,UAAAA,IAAI,CAACO,WAAL,CACEX,CAAC,CAACkB,gBAAF,CACEpB,QAAQ,CAACM,IAAD,EAAO,oBAAP,EAA6B,qBAA7B,EAAoD;AAC1DQ,YAAAA,QAAQ,EAAE;AADgD,WAApD,CADV,EAIEP,IAAI,CAACc,QAJP,EAKE,IALF,CADF;AASD,SAVD,MAUO;AACLf,UAAAA,IAAI,CAACO,WAAL,CACEb,QAAQ,CAACM,IAAD,EAAOC,IAAI,CAACc,QAAL,CAAcX,IAArB,EAA2B,qBAA3B,EAAkD;AACxDI,YAAAA,QAAQ,EAAE;AAD8C,WAAlD,CADV;AAKD;AACF;;AAxCM;AADJ,GAAP;AA4CD","sourcesContent":["import { addNamed } from \"@babel/helper-module-imports\";\n\nexport default function promiseToSync({ types: t }) {\n  return {\n    visitor: {\n      ReferencedIdentifier(path) {\n        const { node, parent, scope } = path;\n\n        if (node.name !== \"Promise\") return;\n        if (t.isMemberExpression(parent)) return;\n        if (scope.getBindingIdentifier(\"Promise\")) return;\n\n        path.replaceWith(\n          addNamed(path, \"SynchronousPromise\", \"synchronous-promise\", {\n            nameHint: \"Promise\"\n          })\n        );\n      },\n\n      MemberExpression(path) {\n        const { node } = path;\n        const obj = node.object;\n\n        if (obj.name !== \"Promise\") return;\n        if (!path.isReferenced()) return;\n        if (path.scope.getBindingIdentifier(\"Promise\")) return;\n\n        if (node.computed) {\n          path.replaceWith(\n            t.memberExpression(\n              addNamed(path, \"SynchronousPromise\", \"synchronous-promise\", {\n                nameHint: \"Promise\"\n              }),\n              node.property,\n              true\n            )\n          );\n        } else {\n          path.replaceWith(\n            addNamed(path, node.property.name, \"synchronous-promise\", {\n              nameHint: \"Promise\"\n            })\n          );\n        }\n      }\n    }\n  };\n}\n"]}