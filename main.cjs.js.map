{"version":3,"sources":["main.js"],"names":["promiseToSync","t","types","visitor","ReferencedIdentifier","path","importName","cloneDeep","replaceWith"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AAEe,SAASA,aAAT,OAAqC;AAAA,MAALC,CAAK,QAAZC,KAAY;AAClD,SAAO;AACLC,IAAAA,OAAO,EAAE;AACVC,MAAAA,oBAAoB,CAACC,IAAD,EAAO;AAC1B,YAAIC,UAAU,GAAG,KAAKA,UAAtB;;AACA,YAAIA,UAAJ,EAAgB;AACfA,UAAAA,UAAU,GAAGL,CAAC,CAACM,SAAF,CAAYD,UAAZ,CAAb;AACA,SAFD,MAEO;AACN;AACAA,UAAAA,UAAU,GAAG,KAAKA,UAAL,GAAkB,mCAASD,IAAT,EAAe,WAAf,EAA4B,UAA5B,CAA/B;AACA;;AAEDA,QAAAA,IAAI,CAACG,WAAL,CAAiBF,UAAjB;AACA,OAXS,CAaP;AACA;AACH;AACG;AACA;AACA;AACH;AACG;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH;AACG;AACA;AACA;AACH;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AApDO;AADJ,GAAP;AAwDD","sourcesContent":["import { addNamed } from \"@babel/helper-module-imports\";\n\n// addNamed(path, 'named', 'source', { nameHint: \"hintedName\" });\n// import { named as _hintedName } from \"source\"\n\nexport default function promiseToSync({ types: t }) {\n  return {\n    visitor: {\n\t\t\tReferencedIdentifier(path) {\n\t\t\t\tlet importName = this.importName;\n\t\t\t\tif (importName) {\n\t\t\t\t\timportName = t.cloneDeep(importName);\n\t\t\t\t} else {\n\t\t\t\t\t// require('bluebird').coroutine\n\t\t\t\t\timportName = this.importName = addNamed(path, 'coroutine', 'bluebird');\n\t\t\t\t}\n\n\t\t\t\tpath.replaceWith(importName);\n\t\t\t}\n\n      // ReferencedIdentifier(path) {\n      //   const { node, parent, scope } = path;\n\t\t\t//\n      //   if (node.name !== \"Promise\") return;\n      //   if (t.isMemberExpression(parent)) return;\n      //   if (scope.getBindingIdentifier(\"Promise\")) return;\n\t\t\t//\n      //   path.replaceWith(\n      //     addNamed(path, \"SynchronousPromise\", \"synchronous-promise\", {\n      //       nameHint: \"SynchronousPromise\"\n      //     })\n      //   );\n      // },\n\n      // MemberExpression(path) {\n      //   const { node } = path;\n      //   const obj = node.object;\n\t\t\t//\n      //   if (obj.name !== \"Promise\") return;\n      //   if (!path.isReferenced()) return;\n      //   if (path.scope.getBindingIdentifier(\"Promise\")) return;\n\t\t\t//\n      //   if (node.computed) {\n      //     path.replaceWith(\n      //       t.memberExpression(\n      //         addNamed(path, \"SynchronousPromise\", \"synchronous-promise\", {\n      //           nameHint: \"SynchronousPromise\"\n      //         }),\n      //         node.property,\n      //         true\n      //       )\n      //     );\n      //   } else {\n      //     path.replaceWith(\n      //       addNamed(path, node.property.name, \"synchronous-promise\", {\n      //         nameHint: \"Promise\"\n      //       })\n      //     );\n      //   }\n      // }\n    }\n  };\n}\n"]}